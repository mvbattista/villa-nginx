worker_processes 1;
 
events { worker_connections 1024; }
 
http {
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    gzip                on;
    server_tokens       off;

#    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /portainer {
            proxy_pass http://127.0.0.1:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
#            proxy_http_version 1.1;
#            proxy_redirect off;
#            proxy_buffering off;
#            proxy_set_header Upgrade $http_upgrade;
#            proxy_set_header Connection "upgrade";
#            sub_filter 'href="/' 'href="/portainer/';
#            rewrite ^/portainer(.*) /$1 break;
#            sub_filter_types *;
          }
    }
}

#server {
#  listen 80;
#
#  location /portainer/ {
#    proxy_pass http://localhost:9000/;
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header Host $http_host;
#    proxy_http_version 1.1;
#    proxy_redirect off;
#    proxy_buffering off;
#    proxy_set_header Upgrade $http_upgrade;
#    proxy_set_header Connection "upgrade";
#    sub_filter 'href="/' 'href="/portainer/';
#
#    rewrite ^/portainer(.*) /$1 break;
#    sub_filter_types *;
#  }
#
#  location /searching/ {
#    proxy_pass http://searching:3001/;
#  }
#
#}
#    upstream docker-nginx {
#        server nginx:80;
#    }
 
#    upstream docker-apache {
#        server apache:80;
#    }

#    server {
#        listen          80;
#        server_name     localhost;
#
#        if ($http_x_forwarded_proto = "http") {
#            return 301 https://$host$request_uri;
#        }

#        access_log      /dev/stdout;
#        error_log       /dev/stderr;

#        location /static {
#            alias /var/static;
#        }
 
#    server {
#        listen 8080;
 
#        location / {
#            proxy_pass         http://docker-nginx;
#            proxy_redirect     off;
#            proxy_set_header   Host $host;
#            proxy_set_header   X-Real-IP $remote_addr;
#            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#            proxy_set_header   X-Forwarded-Host $server_name;
#        }
#    }
# 
#    server {
#        listen 8081;
# 
#        location / {
#            proxy_pass         http://docker-apache;
#            proxy_redirect     off;
#            proxy_set_header   Host $host;
#            proxy_set_header   X-Real-IP $remote_addr;
#            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#            proxy_set_header   X-Forwarded-Host $server_name;
#        }
#    }
# 
#}